{"ast":null,"code":"import _classCallCheck from\"C:\\\\Program Files\\\\Rom\\\\Project\\\\app\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Program Files\\\\Rom\\\\Project\\\\app\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Program Files\\\\Rom\\\\Project\\\\app\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Program Files\\\\Rom\\\\Project\\\\app\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import axios from\"axios\";import React,{Component}from'react';import{Card,CardDeck}from\"react-bootstrap\";import Plot from'react-plotly.js';import AOS from'aos';import'aos/dist/aos.css';import ReplaceStock from'./ReplaceStock';AOS.init();var StockList=/*#__PURE__*/function(_Component){_inherits(StockList,_Component);var _super=_createSuper(StockList);function StockList(){var _this;_classCallCheck(this,StockList);_this=_super.call(this);_this.state={stocks:[]};return _this;}_createClass(StockList,[{key:\"componentDidMount\",//Pushing response stocks (as strings) to this.state.stocks, then calling a function to parse and arrange everything\nvalue:function componentDidMount(){var _this2=this;axios.get('http://localhost:5000/get_all_stocks').then(function(res){var stocks_arr=[];Object.keys(res.data).forEach(function(k){stocks_arr.push({data:res.data[k]});});_this2.setState({stocks:stocks_arr});_this2.update_state();});}//This function is using my response from backend in order to update all state values\n},{key:\"update_state\",value:function update_state(){this.setState(function(state){//this is the final array, which this.state.stocks will be equal to.\nvar stocksArr=[];//Looping over the strings in order to parse them\nstate.stocks.forEach(function(stock){var datesArr=[];var valuesArr=[];var stockName=\"\";var str=String(stock.data);var responseArr=str.split(\",\");var isDate=true;//Looping over and Fetching data from responseArr, manipulates it, and updates datesArr,valuesArr and stockName \nfor(var i=0;i<responseArr.length;i++){if(i==0){stockName=responseArr[i];}else if(responseArr[i]===\"NowValues\"){isDate=false;}else if(isDate==true){var parts=String(responseArr[i]).split('/');var date=new Date(parts[0],parts[1]-1,parts[2]);datesArr.push(date);}else if(isDate==false){valuesArr.push(responseArr[i]);}}//pushing each stock's details to stocksArr\nstocksArr.push({\"datesArr\":datesArr,\"valuesArr\":valuesArr,\"stockName\":stockName});});//returning new state \nreturn{stocks:stocksArr};});}},{key:\"create_body\",value:function create_body(){var _this3=this;var body=\"\";var colorArr=[\"#B22222\",\"#20B2AA\",\"#FFA500\",\"#87CEEB\",\"#483D8B\",\"#000000\",\"#556B2F\"];var zoomSide=\"fade-left\";//Looping over this.state.stocks, creating and returning the Plots' HTML\nreturn body=this.state.stocks.map(function(stock){if(zoomSide===\"fade-right\"){zoomSide=\"fade-left\";}else{zoomSide=\"fade-right\";}return/*#__PURE__*/React.createElement(\"div\",{\"data-aos\":zoomSide,\"data-aos-duration\":\"1500\"},/*#__PURE__*/React.createElement(Card,{border:\"secondary\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{textAlign:\"Center\",fontSize:\"1.7em\"}},/*#__PURE__*/React.createElement(ReplaceStock,{stockName:stock.stockName}),stock.stockName),/*#__PURE__*/React.createElement(Plot,{data:[{x:stock.datesArr,y:stock.valuesArr,fill:\"tonexty\",type:'line',line:{color:_this3.getRandomColor(colorArr)}}],layout:{plot_bgcolor:'#FAF0E6',margin:{l:\"30\",r:\"30\",t:\"5\",b:\"30\"},width:496,height:400}}))));});}//Fetches a color from the color array and then poping the color out of it\n},{key:\"getRandomColor\",value:function getRandomColor(colorArr){var i=Math.floor(Math.random()*colorArr.length);var randomColor=colorArr[i];colorArr.splice(i,1);return randomColor;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{\"data-aos\":\"zoom-in\",\"data-aos-duration\":\"1000\",style:{textAlign:\"center\",fontWeight:\"550\"}},\"Stocks\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",{\"data-aos\":\"zoom-in-up\",\"data-aos-duration\":\"2000\",className:\"text-muted\",style:{textAlign:\"center\",fontStyle:\"oblique\",fontWeight:\"lighter\"}},\"Your money, our pleasure.\"),/*#__PURE__*/React.createElement(CardDeck,{style:{margin:\"5%\",marginTop:\"3%\"}},this.create_body()));}}]);return StockList;}(Component);export{StockList as default};","map":{"version":3,"sources":["C:/Program Files/Rom/Project/app/react-frontend/src/Components/StockList.js"],"names":["axios","React","Component","Card","CardDeck","Plot","AOS","ReplaceStock","init","StockList","state","stocks","get","then","res","stocks_arr","Object","keys","data","forEach","k","push","setState","update_state","stocksArr","stock","datesArr","valuesArr","stockName","str","String","responseArr","split","isDate","i","length","parts","date","Date","body","colorArr","zoomSide","map","textAlign","fontSize","x","y","fill","type","line","color","getRandomColor","plot_bgcolor","margin","l","r","t","b","width","height","Math","floor","random","randomColor","splice","fontWeight","fontStyle","marginTop","create_body"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport React, {Component} from 'react'\r\nimport { Card,CardDeck } from \"react-bootstrap\";\r\nimport Plot from 'react-plotly.js';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'\r\nimport ReplaceStock from './ReplaceStock'\r\nAOS.init();\r\n\r\nexport default class StockList extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            stocks:[]\r\n        }\r\n    };\r\n\r\n    //Pushing response stocks (as strings) to this.state.stocks, then calling a function to parse and arrange everything\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/get_all_stocks')\r\n        .then( res => {\r\n            var stocks_arr = []\r\n            Object.keys(res.data).forEach(k => {\r\n                stocks_arr.push({data:res.data[k]})\r\n            })\r\n            this.setState({stocks:stocks_arr})\r\n            this.update_state()\r\n        })       \r\n    }\r\n\r\n    //This function is using my response from backend in order to update all state values\r\n    update_state(){\r\n        this.setState(state => {  \r\n            \r\n            //this is the final array, which this.state.stocks will be equal to.\r\n            var stocksArr = []\r\n            \r\n            //Looping over the strings in order to parse them\r\n            state.stocks.forEach( stock => {\r\n                var datesArr = []\r\n                var valuesArr = []\r\n                var stockName = \"\"\r\n                \r\n                var str = String(stock.data)\r\n                var responseArr = str.split(\",\")\r\n                var isDate = true\r\n                \r\n                //Looping over and Fetching data from responseArr, manipulates it, and updates datesArr,valuesArr and stockName \r\n                for (var i=0;i<responseArr.length;i++){\r\n                    if (i == 0){stockName = responseArr[i]}\r\n                    else if ( responseArr[i] === \"NowValues\" ){ isDate = false }   \r\n                    else if ( isDate == true )\r\n                    {\r\n                        var parts = String(responseArr[i]).split('/');\r\n                        var date = new Date(parts[0],parts[1] - 1,parts[2]);\r\n                        datesArr.push(date)\r\n                    }\r\n                    else if (isDate == false)\r\n                    { \r\n                        valuesArr.push(responseArr[i])\r\n                    }\r\n                }\r\n                //pushing each stock's details to stocksArr\r\n                stocksArr.push({\"datesArr\":datesArr,\"valuesArr\":valuesArr,\"stockName\":stockName})\r\n            })\r\n            //returning new state \r\n            return {stocks:stocksArr}\r\n        })\r\n    }\r\n    \r\n    create_body(){\r\n        var body = \"\"\r\n        var colorArr = [\"#B22222\",\"#20B2AA\",\"#FFA500\",\"#87CEEB\",\"#483D8B\",\"#000000\",\"#556B2F\"]\r\n        var zoomSide = \"fade-left\"\r\n        //Looping over this.state.stocks, creating and returning the Plots' HTML\r\n        return body = this.state.stocks.map( stock => {\r\n            if (zoomSide === \"fade-right\") {zoomSide=\"fade-left\"} else {zoomSide=\"fade-right\"}\r\n            return(\r\n                <div data-aos={zoomSide} data-aos-duration=\"1500\"><Card border=\"secondary\">\r\n                    <Card.Body>\r\n                        <Card.Title style={{textAlign:\"Center\",fontSize:\"1.7em\"}}>\r\n                            <ReplaceStock stockName={stock.stockName} />\r\n                            {stock.stockName}\r\n                        </Card.Title>\r\n                        <Plot\r\n                            data={[\r\n                            {\r\n                                x: stock.datesArr,\r\n                                y: stock.valuesArr,\r\n                                fill: \"tonexty\",\r\n                                type: 'line',\r\n                                line:{color:this.getRandomColor(colorArr)}    \r\n                            }\r\n                            ]}\r\n                            layout={ {plot_bgcolor:'#FAF0E6',margin:{l:\"30\",r :\"30\",t:\"5\",b:\"30\"},width:496,height:400}}/>\r\n                    </Card.Body>   \r\n                </Card></div>\r\n            )\r\n        })\r\n    }\r\n    //Fetches a color from the color array and then poping the color out of it\r\n    getRandomColor(colorArr) {\r\n        var i = Math.floor(Math.random()*colorArr.length)\r\n        var randomColor = colorArr[i];\r\n        colorArr.splice(i,1)\r\n        return randomColor;\r\n    }\r\n\r\n    render(){ \r\n        return (<div>\r\n                    <h1 data-aos=\"zoom-in\" data-aos-duration=\"1000\" style={{textAlign:\"center\",fontWeight:\"550\"}}>Stocks</h1>\r\n                    <br/>\r\n                    <h3 data-aos=\"zoom-in-up\" data-aos-duration=\"2000\" className=\"text-muted\" style={{textAlign:\"center\",fontStyle:\"oblique\",fontWeight:\"lighter\"}}>Your money, our pleasure.</h3>\r\n                    <CardDeck style={{margin:\"5%\",marginTop:\"3%\"}}>{this.create_body()}</CardDeck>\r\n                </div>)\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}