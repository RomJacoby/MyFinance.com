{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Rom\\\\Project\\\\app\\\\react-frontend\\\\src\\\\Components\\\\StockList.js\";\nimport axios from \"axios\";\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nexport default class StockList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stocks: []\n    };\n    this.create_plot = this.create_plot.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/get_all_stocks').then(res => {\n      var stocks_arr = [];\n      Object.keys(res.data).forEach(k => {\n        stocks_arr.push(res.data[k]);\n      });\n      this.setState({\n        stocks: stocks_arr\n      });\n    });\n  }\n\n  create_plot(stock) {\n    var str = String(stock);\n    var stockName = \"\";\n    var datesArr = [];\n    var valuesArr = [];\n    var arr = str.split(\",\");\n    var i = 0;\n    var isDate = true;\n\n    for (i = 0; i < arr.length; i++) {\n      if (i == 0) {\n        stockName = arr[0];\n      } else if (arr[i] === \"NowValues\") {\n        isDate = false;\n      } else if (isDate == true) {\n        datesArr.push(arr[i]);\n      } else if (isDate == false) {\n        valuesArr.push(arr[i]);\n      }\n    }\n\n    var i = 0;\n    datesArr.forEach(date => {\n      var parts = date.split('/');\n      var newDate = new Date(parts[0], parts[1] - 1, parts[2]);\n      datesArr[i] = newDate;\n      i++;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: datesArr,\n        y: valuesArr,\n        fill: \"tonexty\",\n        type: 'line'\n      }],\n      layout: {\n        plot_bgcolor: '#FAF0E6',\n        title: stockName,\n        xaxis: {\n          title: \"Dates\"\n        },\n        yaxis: {\n          title: \"Values\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }\n    }));\n  }\n\n  render() {\n    var stock_list = this.state.stocks;\n    var body = [];\n    stock_list.forEach(stock => {\n      body.push(this.create_plot(stock));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, body);\n  }\n\n}","map":{"version":3,"sources":["C:/Program Files/Rom/Project/app/react-frontend/src/Components/StockList.js"],"names":["axios","React","Component","Plot","StockList","constructor","state","stocks","create_plot","bind","componentDidMount","get","then","res","stocks_arr","Object","keys","data","forEach","k","push","setState","stock","str","String","stockName","datesArr","valuesArr","arr","split","i","isDate","length","date","parts","newDate","Date","x","y","fill","type","plot_bgcolor","title","xaxis","yaxis","render","stock_list","body"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport React, {Component} from 'react'\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class StockList extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            stocks:[]\r\n        }\r\n        this.create_plot = this.create_plot.bind(this)\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/get_all_stocks')\r\n        .then( res => {\r\n            var stocks_arr = []\r\n            Object.keys(res.data).forEach(k => {\r\n                stocks_arr.push(res.data[k])\r\n            })\r\n            this.setState({stocks:stocks_arr})\r\n        } )\r\n    }\r\n    \r\n    create_plot(stock){\r\n        var str = String(stock)\r\n        var stockName = \"\"\r\n        var datesArr = []\r\n        var valuesArr = []\r\n        var arr = str.split(\",\")\r\n        var i = 0\r\n        var isDate = true\r\n        for (i=0;i<arr.length;i++){\r\n            \r\n            if (i == 0){ stockName = arr[0] }\r\n            else if (arr[i] === \"NowValues\"){ isDate = false }   \r\n            else if (isDate == true) { datesArr.push(arr[i]) }\r\n            else if (isDate == false){ valuesArr.push(arr[i]) }\r\n        }\r\n        \r\n        var i = 0\r\n        datesArr.forEach(date => { \r\n            var parts = date.split('/');\r\n            var newDate = new Date(parts[0],parts[1] - 1,parts[2]);\r\n            datesArr[i] = newDate;\r\n            i++;\r\n        });\r\n        return(\r\n            <div><Plot\r\n                data={[\r\n                {\r\n                    x: datesArr,\r\n                    y: valuesArr,\r\n                    fill: \"tonexty\",\r\n                    type: 'line'\r\n                }\r\n                ]}\r\n                layout={ {plot_bgcolor:'#FAF0E6' ,title: stockName,xaxis:{title:\"Dates\"},yaxis:{title:\"Values\"}} }/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        var stock_list = this.state.stocks\r\n        var body = []\r\n        stock_list.forEach(stock => {\r\n            body.push(this.create_plot(stock))\r\n        });\r\n        return (<div>{body}</div>)\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}